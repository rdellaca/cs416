<html>
<title>D3.js Visualization - Roger Dellaca</title>
<script src='https://d3js.org/d3.v5.min.js'></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>

<style>
/* Style for scene links */
a.scene-link {
  padding: 5px;
  background-color: #444;
  color: #ddd;
  text-decoration: none;
}

a.scene-link:hover, a.selected {
  color: #666;
}

/* divs */
#top{
  margin: auto;
  padding-top: 20px;
  width: 980px;
}

#graph{
  width: 500px;
  float: left;
}

#details{
  width: 480px;
  float:right;
}

</style>



<body>
 <div id="top">
    <h1>Bitcoin Investment Dynamics</h1>
    <h2></h2>
    <div id="nav">
      <a href="#" id="scene1" class="scene-link selected" onclick = "return changeScene(1);">Scene 1</a>
      <a href="#" id="scene2" class="scene-link" onclick = "return changeScene(2);">Scene 2</a>
      <a href="#" id="scene3" class="scene-link" onclick = "return changeScene(3);">Scene 3</a>
    </div>

<div id="graph">
</div>

<div id="details">
</div>



</body>

<script>
// track which scene is active

var activeScene = 1;

//size parameters
var margin = {top: 10, right: 30, bottom: 30, left: 60},
    width = 460 - margin.left - margin.right,
    height = 400 - margin.top - margin.bottom;


// Attach to the SVG to the graph div
var svg = d3.select("#graph")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

// Make a variable for the text details
var div_details = document.getElementById('details');

// Load the data
var BTC_SPY_data;

d3.csv("BTC-USD-SPY-daily-prices.csv", function(d) {
	    d.Date = d3.timeParse("%Y-%m-%d")(d.Date); // store as Date object
	    d.BTC_Close = +d.BTC_Close;
      d.BTC_Volume = +d.BTC_Volume;
      d.Pctchange_BTC_1day = +d.Pctchange_BTC_1day;
      d.Pctchange_BTC_1week = +d.Pctchange_BTC_1week;
      d.Pctchange_BTC_4weeks = +d.Pctchange_BTC_4weeks;
      d.SPY_Close = +d.SPY_Close;
      d.SPY_Volume = +d.SPY_Volume;
      d.Pctchange_SPY_1day = +d.Pctchange_SPY_1day;
      d.Pctchange_SPY_1week = +d.Pctchange_SPY_1week;
      d.Pctchange_SPY_4weeks = +d.Pctchange_SPY_4weeks;
      return d;
	  }).then(function(data) {
    BTC_SPY_data = data;
    loadScene1(BTC_SPY_data);
  });

// Scene 1
function loadScene1(data) {
  // Add X axis --> date format
    var x = d3.scaleTime()
      .domain(d3.extent(data, function(d) { return d.Date; }))
      .range([ 0, width ]);
    svg.append("g")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x).tickFormat(d3.timeFormat("%b,%y")));

  // text label for the X axis
     svg.append("text")
         .attr("transform",
               "translate(" + (width/2) + " ," + (height + margin.bottom) + ")")
         .style("text-anchor", "middle")
         .text("Date");

// Add Y axis
    var y = d3.scaleLinear()
      .domain([0, d3.max(data, function(d) { return +d.BTC_Close; })])
      .range([ height, 0 ]);
    svg.append("g")
      .call(d3.axisLeft(y));

  // text label for the Y axis
      svg.append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 0 - margin.left)
          .attr("x",0 - (height / 2))
          .attr("dy", "1em")
          .style("text-anchor", "middle")
          .text("BTC-USD Price");

  // Add the line
    svg.append("path")
      .datum(data)
      .attr("fill", "none")
      .attr("stroke", "steelblue")
      .attr("stroke-width", 1.5)
      .attr("d", d3.line()
        .x(function(d) { return x(d.Date) })
        .y(function(d) { return y(d.BTC_Close) })
      );

  // Add the detail text
  div_details.innerHTML = "<p>This chart shows the daily closing price of BTC-USD (Bitcoin in US Dollars).";
  div_details.innerHTML += "<p>Bitcoin is the world’s first decentralized cryptocurrency – a type of digital asset that uses public-key cryptography to record, sign and send transactions over the Bitcoin blockchain.";
  div_details.innerHTML += "<p>The chart is from Feb 2018 to May 21.";
  div_details.innerHTML += "<p>You can add the daily volume to the chart by clicking here: <button onclick='addScene1Volume(BTC_SPY_data)'>Add!</button>";
};

function addScene1Volume(data) {
  // add volume bars under the price if selected

  // setup
  var x = d3.scaleTime()
    .domain(d3.extent(data, function(d) { return d.Date; }))
    .range([ 0, width ]);

  const yMinVolume = d3.min(data, d => {
    return Math.min(d['BTC_Volume']);
  });
  const yMaxVolume = d3.max(data, d => {
    return Math.max(d['BTC_Volume']);
  });
  const yVolumeScale = d3
    .scaleLinear()
    .domain([yMinVolume, yMaxVolume])
    .range([height, 2*height/3]);

  // add to chart
  svg.selectAll('rect').data(data).enter().append('rect')
    .attr('x', function(d) { return x(d.Date) })
    .attr('y', function(d) { return yVolumeScale(d['BTC_Volume']) })
    .attr('fill', (d, i) => {
      if (i === 0) { return '#03a678';
    } else {  return data[i - 1].BTC_Close > d.BTC_Close ? '#c0392b' : '#03a678';
      }
    })
    .attr('width', 1)
    .attr('height', d => {
      return height - yVolumeScale(d['BTC_Volume']);
    });

  };

// end scene 1

// Scene 2
function loadScene2(data) {

};

// Scene 3
function loadScene3(data) {

};

// change scene
function changeScene(sceneNum) {
  if (sceneNum != activeScene) {
    // switch scenes
    if (sceneNum == 1) {
      loadScene1(BTC_SPY_data);
    } else if (sceneNum == 2) {
      loadScene2(BTC_SPY_data);
    } else {
      loadScene3(BTC_SPY_data);
    }
    activeScene = sceneNum;
  }
};


</script>
</html>
